{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useState","value","setValue","todos","setTodos","addTodo","text","complete","onSubmit","e","preventDefault","type","onChange","target","required","map","todo","index","style","display","textDecoration","onClick","newTodos","completeTodo","splice","removeTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oNAae,aACb,MAAwBA,mBAAiB,IAAzC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAwBF,mBAAkB,IAA1C,mBAAKG,EAAL,KAAYC,EAAZ,KAQMC,EAAU,SAACC,GACfF,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEG,KAAKA,EAAMC,UAAU,OAa7C,OACE,eAAC,WAAD,WACE,2CACA,uBAAMC,SAvBS,SAACC,GAClBA,EAAEC,iBACFL,EAAQJ,GACRC,EAAS,KAoBP,UACE,uBACES,KAAK,OACLV,MAAOA,EACPW,SAAU,SAAAH,GAAC,OAAIP,EAASO,EAAEI,OAAOZ,QACjCa,UAAQ,IAEV,wBAAQH,KAAK,SAAb,yBAEF,kCACGR,EAAMY,KAAI,SAACC,EAAMC,GAAP,OACT,sBAAkBC,MAAO,CAAEC,QAAS,QAApC,UACE,qBACED,MAAO,CAAEE,eAAgBJ,EAAKT,SAAW,eAAiB,IAD5D,SAGGS,EAAKV,OAER,wBAAQK,KAAK,SAASU,QAAS,kBA9BzC,SAAsBJ,GACpB,IAAMK,EAAoBnB,EAC1BmB,EAASL,GAAOV,UAAYe,EAASL,GAAOV,SAC5CH,EAAS,YAAIkB,IA2BgCC,CAAaN,IAAlD,SACGD,EAAKT,SAAW,aAAe,aAElC,wBAAQc,QAAS,kBA5B3B,SAAoBJ,GAClB,IAAMK,EAAoBnB,EAC1BmB,EAASE,OAAOP,EAAO,GACvBb,EAAS,YAAIkB,IAyBkBG,CAAWR,IAAlC,iBATQA,YCrCLS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAENC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e4ac22a4.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\nimport { Container,Navbar,Nav,NavDropdown,Form,FormControl,Button,Dropdown,NavItem,Table } from 'react-bootstrap'\nimport axios from 'axios'\nimport React,{useState,useEffect, Fragment} from 'react';\n\ntype FormElem = React.FormEvent<HTMLFormElement>\ninterface ITodo {\n  text: string,\n  complete: boolean\n}\n\nexport default () => {\n  let [value, setValue] = useState<string>('')\n  let [todos, setTodos] = useState<ITodo[]>([])\n\n  let handleSubmit = (e) => {\n    e.preventDefault()\n    addTodo(value)\n    setValue('')\n  }\n\n  const addTodo = (text) => {\n    setTodos([...todos, { text:text, complete: false }])\n  }\n\n  function completeTodo(index: number): void{\n    const newTodos: ITodo[] = todos\n    newTodos[index].complete = !newTodos[index].complete\n    setTodos([...newTodos])\n  }\n  function removeTodo(index: number): void{\n    const newTodos: ITodo[] = todos\n    newTodos.splice(index, 1)\n    setTodos([...newTodos])\n  }\n  return (\n    <Fragment>\n      <h1>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          required\n        />\n        <button type='submit'>Add Todo</button>\n      </form>\n      <section>\n        {todos.map((todo, index) => (\n          <div key={index}  style={{ display: 'flex' }}>\n            <div\n              style={{ textDecoration: todo.complete ? 'line-through' : '' }}\n            >\n              {todo.text}\n            </div>\n            <button type='button' onClick={() => completeTodo(index)}>\n              {todo.complete ? 'Incomplete' : 'Complete'}\n            </button>\n            <button onClick={() => removeTodo(index)}>x</button>\n          </div>\n        ))}\n      </section>\n    </Fragment>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}